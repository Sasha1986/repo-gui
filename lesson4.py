from random import randint
from functools import reduce


def my_func(num_1, num_2):
    return num_1 * num_2

while 0 == 0:
    zadanie = int(input("\nВведите номер задания, для выхода введите 0: "))
    print("")
    if zadanie == 0:
        break
    elif zadanie == 1:
        print("Задание 1. Реализовать скрипт, в котором должна быть предусмотрена функция расчета\n"
              " заработной платы сотрудника. В расчете необходимо использовать формулу:\n"
              "(выработка в часах * ставка в час) + премия. Для выполнения расчета для конкретных значений\n"
              "необходимо запускать скрипт с параметрами."
              "Задание выполнено в отдельном файле scrypt.py")
    elif zadanie == 2:
        print("Задание 2. Представлен список чисел. Необходимо вывести элементы исходного списка,\n"
              "значения которых больше предыдущего элемента. "
              "Подсказка: элементы, удовлетворяющие условию, оформить в виде списка.\n"
              "Для формирования списка использовать генератор.\n"
              "Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].\n"
              "Результат: [12, 44, 4, 10, 78, 123].")
        item = 0
        num_list = list()
        while item < 13:
            num_list.append(randint(1, 1000))
            item += 1
        print("\nИсходный список: ", num_list)
        num_list_2 = list()
        num_1 = 0
        for item_2 in num_list:
            if item_2 > num_1:
                num_list_2.append(item_2)
            num_1 = item_2
        print("Результат: ", num_list_2)
    elif zadanie == 3:
        print("Задание 3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21.\n"
              "Необходимо решить задание в одну строку.\n"
              "Подсказка: использовать функцию range() и генератор.")
        print([el for el in list(range(20, 241, 1)) if el % 20 == 0 or el % 21 == 0])
    elif zadanie == 4:
        print("Задание 4: Представлен список чисел. Определить элементы списка, не имеющие повторений.\n"
              "Сформировать итоговый массив чисел, соответствующих требованию. Элементы вывести в порядке\n"
              "их следования в исходном списке. Для выполнения задания обязательно использовать генератор.\n"
              "Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].\n"
              "Результат: [23, 1, 3, 10, 4, 11]")
        item = 0
        num_list = list()
        while item < 15:
            num_list.append(randint(1, 40))
            item += 1
        print("\nИсходный список чисел: ", num_list)
        new_num_list = list()
        for el in num_list:
            check = 0
            for new_el in num_list:
                if el == new_el:
                    check += 1
            if check > 1:
                new_num_list.append(el)
        for el in new_num_list:
            for new_el in num_list:
                if el == new_el:
                    num_list.remove(el)
        print("Результат: ", num_list)
    elif zadanie == 5:
        print("Задание 5: Реализовать формирование списка, используя функцию range() и возможности генератора.\n"
              "В список должны войти четные числа от 100 до 1000 (включая границы). Необходимо получить\n"
              "результат вычисления произведения всех элементов списка.\n"
              "Подсказка: использовать функцию reduce().")
        print(reduce(my_func, list(range(100, 1001, 2))))
    elif zadanie == 6:
        print("Задание 6: Реализовать два небольших скрипта:\n"
              "а) итератор, генерирующий целые числа, начиная с указанного,\n"
              "б) итератор, повторяющий элементы некоторого списка, определенного заранее.\n"
              "Подсказка: использовать функцию count() и cycle() модуля itertools. Обратите внимание,\n"
              "что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.\n"
              "Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.\n"
              "Во втором также необходимо предусмотреть условие, при котором повторение элементов списка\n"
              "будет прекращено."
              "Задание выполнено в отдельном файле scrypt1.py и scrypt2.py")
    elif zadanie == 7:
        print("Задание 7: Реализовать генератор с помощью функции с ключевым словом yield,\n"
              "создающим очередное значение. При вызове функции должен создаваться объект-генератор.\n"
              "Функция должна вызываться следующим образом: for el in fact(n). Функция отвечает за получение\n"
              "факториала числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.\n"
              "Подсказка: факториал числа n — произведение чисел от 1 до n.\n"
              "Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.")
        num = int(input("Введите число n: "))
        def fact(n):
            el = 1
            while el <= n:
                yield el, reduce(my_func, list(range(1, el+1, 1)))
                el += 1

        for n, el in fact(num):
            print(f"{n}! = {el}\n")
