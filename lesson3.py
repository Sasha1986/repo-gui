while 0 == 0:
    print("")
    print("1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.")
    print("2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя")
    print("3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает\n "
          "сумму наибольших двух")
    print("4. Программа принимает действительное положительное число x и целое отрицательное число y.")
    print("5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.")
    print('6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую\n '
          'его же, но с прописной первой буквой.')
    print("0. Выход")
    print("")
    zadanie = int(input("Введите номер задания: "))
    if zadanie == 0:
        break
    elif zadanie == 1:
        print('Задание: Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.\n '
              'Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.')
        def del_two_numbers(arg_1, arg_2):
            """Функция, принимающая два числа (позиционные аргументы) и выполняющая их деление"""
            if arg_2 != 0:
                print(f"Решение: {arg_1} / {arg_2} = ", arg_1 / arg_2, '\n')
                input("Нажмите Enter для продолжения...")
            else:
                print("Нельзя делить на ноль\n")
                input("Нажмите Enter для продолжения...")
        num_1 = int(input('Введите пожалуйста первое число: '))
        num_2 = int(input('Введите пожалуйста второе число: '))
        del_two_numbers(num_1, num_2)
# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия,
    # год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные
    # аргументы. Реализовать вывод данных о пользователе одной строкой.
#     elif zadanie == 2:
# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших
    # двух аргументов.
#   elif zadanie == 3:
# 4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо
    # выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
    # При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
    # Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
# elif zadanie == 4:
# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна
    # выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать
    # Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа
    # вводится специальный символ, выполнение программы завершается. Если специальный символ введен после
    # ескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого
    # завершить программу.
# elif zadanie == 5:
# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
    # но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое
    # слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово
    # должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
# elif zadanie == 4:
    else:
        print("Такого задания нет")