main = 1
while main != 0:
    print("")
    print("1. Создать список и заполнить его элементами различных типов данных")
    print("2. Для списка реализовать обмен значений соседних элементов")
    print("3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц")
    print("4. Пользователь вводит строку - нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки")
    print("5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел")
    print('6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей')
    print("0. Выход")
    print("")
    zadanie = int(input("Введите номер задания: "))
# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
    if zadanie == 1:
        list_one = ('5', 43)
        list_my = (5, "d", "golos", True, list_one)
        for item in list_my:
            print(item)
            print(type(item))
# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
    elif zadanie == 2:
        list_my = list(input("Введите строку элементов: "))
        print(list_my)
        list_per = 0
        list_last = 0
        num = 0
        if len(list_my) % 2 == 0:
            for item in list_my[::2]:
                list_per = list_my[num + 1]
                list_my[num + 1] = list_my[num]
                list_my[num] = list_per
                num = num + 2
        else:
            list_last = list_my[-1:]
            list_my.pop(len(list_my) - 1)
            for item in list_my[::2]:
                list_per = list_my[num + 1]
                list_my[num + 1] = list_my[num]
                list_my[num] = list_per
                num = num + 2
            list_my.append(list_last[0])
        print(list_my)
# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.
#     elif zadanie == 3:
# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
    # Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
#     elif zadanie == 4:
# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми
# значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
#     elif zadanie == 5:
# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
# информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно,
# т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
#     elif zadanie == 6:
    elif zadanie == 0:
        main = zadanie
    else:
        print("Такого задания нет")
